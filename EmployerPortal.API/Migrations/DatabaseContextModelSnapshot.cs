// <auto-generated />
using System;
using EmployerPortal.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployerPortal.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployerPortal.API.Data.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agent_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date_Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Employed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Of_Birth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Othernames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin_Invalid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheme_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("State_Of_Posting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upload_Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("StateCode");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Agent_Code = "",
                            Client_Status = "C",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_Created = "2012-04-01",
                            Date_Employed = "2012-04-01",
                            Date_Of_Birth = "1986-10-26",
                            Email = "sheyions4real@yahoo.co.uk",
                            EmployerCode = "PR0000613584",
                            EmployerId = 1,
                            EmployerName = "OAK PENSIONS LIMITED",
                            Firstname = "Sheyi",
                            Gender = "M",
                            Mobile_Phone = "08134454808",
                            Othernames = "Matthew",
                            Pin = "PEN100599222817",
                            Pin_Invalid = "0",
                            Scheme_Id = "2000006",
                            Ssn = "",
                            State_Of_Posting = "LA",
                            Surname = "Omagene",
                            Title = "Mr",
                            Upload_Date = "2012-04-01"
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Officer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCode")
                        .IsUnique()
                        .HasFilter("[EmployerCode] IS NOT NULL");

                    b.HasIndex("IndustryName");

                    b.HasIndex("StateCode");

                    b.ToTable("Employers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "15B OKO AWO STREET  VICTORIA ISLAND, LAGOS",
                            City = "LAGOS",
                            Contact_Officer_Name = "Akinwumi A.",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "info@oakpensions.com",
                            EmployerCode = "PR0000613584",
                            EmployerName = "OAK PENSIONS LIMITED",
                            IndustryId = 2,
                            Mobile_Phone = "07002255625",
                            Sector = "Private",
                            State = "LAGOS"
                        },
                        new
                        {
                            Id = 2,
                            Address = "PLOT 590 ZONE A.O NAIC HOUSE CBD",
                            City = "Abuja",
                            Contact_Officer_Name = "AYEKAME ELUKPO",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            EmployerCode = "PR0000041041",
                            EmployerName = "DUETHEL PRO SERVICES LIMITED",
                            IndustryId = 1,
                            Mobile_Phone = "08126696169",
                            Sector = "Private",
                            State = "FCT"
                        },
                        new
                        {
                            Id = 3,
                            Address = "16 YASHIM DOGARA CRESCENT DAWAKI ABUJA",
                            City = "Abuja",
                            Contact_Officer_Name = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            EmployerCode = "PR0000041042",
                            EmployerName = "WINCREST CONSULT LIMITED",
                            IndustryId = 1,
                            Mobile_Phone = "08163313858",
                            Sector = "Private",
                            State = "FCT"
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.EmployerAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerContact_Officer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerMobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Officer_Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelationshipManagerID")
                        .HasColumnType("int");

                    b.Property<string>("State_Of_Posting")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("RelationshipManagerID");

                    b.ToTable("EmployerAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployerAddress = "266 Murtala Muhammed Way, Alagomeji Yaba",
                            EmployerCity = "Lagos",
                            EmployerCode = "PR0000613584",
                            EmployerContact_Officer_Name = "Henry Christopher",
                            EmployerEmail = "info@oakpensions.com",
                            EmployerId = 1,
                            EmployerMobile_Phone = "07002255625",
                            EmployerState = "LA",
                            Officer_Position = "Head, HR",
                            RelationshipManagerID = 1,
                            State_Of_Posting = "LA"
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Industry", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Industry");

                    b.HasData(
                        new
                        {
                            Name = "Petroleum Products Sales and Services",
                            Code = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Petroleum Products Sales and Services",
                            Id = 0
                        },
                        new
                        {
                            Name = "Others",
                            Code = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Other services not listed",
                            Id = 0
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.NewPaymentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmationOfPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContributionMonth")
                        .HasColumnType("int");

                    b.Property<int>("ContributionYear")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ScheduleAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ScheduleFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("NewPaymentSchedules");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.RelationshipManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Othernames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StateOfPosting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("StateCode");

                    b.ToTable("RelationshipManagers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgentCode = "LAG101",
                            BranchCode = "LA",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lolua@oakpensions.com",
                            Firstname = "Omololu",
                            Gender = "M",
                            Mobile_Phone = "08029510718",
                            Othernames = "Olasupo",
                            StateOfPosting = "LA",
                            Surname = "Adetula",
                            Title = "Mr"
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("Amount_Processed")
                        .HasColumnType("float");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<int>("IDNO")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Refund_Amount")
                        .HasColumnType("float");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2021556.46,
                            Amount_Processed = 0.0,
                            Checked = false,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "REM  N-10042361295/PR0000613584/NIP0341903290-000000364600 91004236129",
                            EmployerCode = "PR0000613584",
                            EmployerId = 1,
                            IDNO = 200734,
                            RefNo = "S50268032-2",
                            Refund_Amount = 0.0,
                            StatusCode = "R",
                            ValueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1987)
                        });
                });

            modelBuilder.Entity("EmployerPortal.API.Data.State", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Code = "AB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ABIA",
                            Id = 0,
                            Region = "SOUTH EAST",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "AD",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ADAMAWA",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NE"
                        },
                        new
                        {
                            Code = "AK",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AKWA IBOM",
                            Id = 0,
                            Region = "AKWA IBOM",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "AN",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ANAMBRA",
                            Id = 0,
                            Region = "SOUTH EAST",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "BA",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BAUCH",
                            Id = 0,
                            Region = "KADUNA",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "BE",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BENUE",
                            Id = 0,
                            Region = "BENUE",
                            ZoneCode = "NC"
                        },
                        new
                        {
                            Code = "BO",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BORNO",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NE"
                        },
                        new
                        {
                            Code = "BY",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BAYELSA",
                            Id = 0,
                            Region = "RIVERS",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "CR",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CROSS RIVER",
                            Id = 0,
                            Region = "AKWA IBOM",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "DT",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DELTA",
                            Id = 0,
                            Region = "DELTA",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "EB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "EBONYI",
                            Id = 0,
                            Region = "SOUTH EAST",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "ED",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "EDO",
                            Id = 0,
                            Region = "DELTA",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "EK",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "EKITI",
                            Id = 0,
                            Region = "EKITI",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "EN",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ENUGU",
                            Id = 0,
                            Region = "SOUTH EAST",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "FC",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "FED. CAPITAL TERITORY",
                            Id = 0,
                            Region = "ABUJA",
                            ZoneCode = "FC"
                        },
                        new
                        {
                            Code = "GB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "GOMBE",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "IM",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "IMO",
                            Id = 0,
                            Region = "SOUTH EAST",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "JG",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "JIGAWA",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "KB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "KEBBI",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "KD",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ABIA",
                            Id = 0,
                            Region = "KADUNA",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "KG",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ABIA",
                            Id = 0,
                            Region = "BENUE",
                            ZoneCode = "NV"
                        },
                        new
                        {
                            Code = "KN",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "KANO",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "KT",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "KATSINA",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "KW",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "KWARA",
                            Id = 0,
                            Region = "OSUN",
                            ZoneCode = "NC"
                        },
                        new
                        {
                            Code = "LA",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "LAGOS",
                            Id = 0,
                            Region = "LAGOS",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "NG",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NIGER",
                            Id = 0,
                            Region = "BENUE",
                            ZoneCode = "NE"
                        },
                        new
                        {
                            Code = "NR",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NASARAWA",
                            Id = 0,
                            Region = "BENUE",
                            ZoneCode = "NC"
                        },
                        new
                        {
                            Code = "OD",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ONDO",
                            Id = 0,
                            Region = "EKITI",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "OG",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OGUN",
                            Id = 0,
                            Region = "OGUN",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "OS",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OSUN",
                            Id = 0,
                            Region = "OSUN",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "OY",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OYO",
                            Id = 0,
                            Region = "OYO",
                            ZoneCode = "SW"
                        },
                        new
                        {
                            Code = "PL",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PLATEAU",
                            Id = 0,
                            Region = "KADUNA",
                            ZoneCode = "NC"
                        },
                        new
                        {
                            Code = "RV",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RIVERS",
                            Id = 0,
                            Region = "RIVERS",
                            ZoneCode = "SS"
                        },
                        new
                        {
                            Code = "SO",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SOKOTO",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NE"
                        },
                        new
                        {
                            Code = "TB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TARABA",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "SE"
                        },
                        new
                        {
                            Code = "YB",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "YOBE",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NW"
                        },
                        new
                        {
                            Code = "ZA",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ZAMFARA",
                            Id = 0,
                            Region = "KANO",
                            ZoneCode = "NE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "5df1a3ae-ebcd-48a2-a9e0-88734070b9e4",
                            ConcurrencyStamp = "1dc05e1d-c041-42ee-93e2-241c13eba7fb",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "21fd5fa5-23e7-4312-b606-2435b0a51e25",
                            ConcurrencyStamp = "c993a3e2-bbcf-4d43-b253-564f50f7a0a3",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = "a0843563-4df6-4b92-9630-e541f2d0a895",
                            ConcurrencyStamp = "5fc2c417-f8fc-48a8-b28e-b0dc2366e835",
                            Name = "RelationshipManager",
                            NormalizedName = "RELATIONSHIP MANAGER"
                        },
                        new
                        {
                            Id = "35eb65d0-a88c-4018-9195-95d6f15f4b84",
                            ConcurrencyStamp = "69226fc5-d032-4e16-b74c-b366bae76d5c",
                            Name = "Supervisor",
                            NormalizedName = "SUPERVISOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employee", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany("Employees")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployerPortal.API.Data.State", "State")
                        .WithMany("Employees")
                        .HasForeignKey("StateCode");

                    b.Navigation("Employer");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employer", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Industry", "Industry")
                        .WithMany("Employees")
                        .HasForeignKey("IndustryName");

                    b.HasOne("EmployerPortal.API.Data.State", null)
                        .WithMany("Employers")
                        .HasForeignKey("StateCode");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.EmployerAllocation", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany("EmployerAllocations")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployerPortal.API.Data.RelationshipManager", "RelationshipManager")
                        .WithMany("EmployerAllocations")
                        .HasForeignKey("RelationshipManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");

                    b.Navigation("RelationshipManager");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.NewPaymentSchedule", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany("NewPaymentSchedules")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.RelationshipManager", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", null)
                        .WithMany("RelationshipManagers")
                        .HasForeignKey("EmployerId");

                    b.HasOne("EmployerPortal.API.Data.State", "State")
                        .WithMany("RelationshipManagers")
                        .HasForeignKey("StateCode");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Schedule", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployerPortal.API.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employer", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("EmployerAllocations");

                    b.Navigation("NewPaymentSchedules");

                    b.Navigation("RelationshipManagers");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Industry", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.RelationshipManager", b =>
                {
                    b.Navigation("EmployerAllocations");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.State", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Employers");

                    b.Navigation("RelationshipManagers");
                });
#pragma warning restore 612, 618
        }
    }
}
