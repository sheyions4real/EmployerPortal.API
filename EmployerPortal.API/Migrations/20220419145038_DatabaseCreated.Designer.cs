// <auto-generated />
using System;
using EmployerPortal.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployerPortal.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220419145038_DatabaseCreated")]
    partial class DatabaseCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployerPortal.API.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agent_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date_Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Employed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Of_Birth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Othernames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin_Invalid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheme_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State_Of_Posting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upload_Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCode");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employer", b =>
                {
                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Officer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployerCode");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.EmployerAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployerContact_Officer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerMobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RelationshipManagerId")
                        .HasColumnType("int");

                    b.Property<string>("State_Of_Posting")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCode");

                    b.HasIndex("RelationshipManagerId");

                    b.ToTable("EmployerAllocations");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.NewPaymentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmationOfPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContributionMonth")
                        .HasColumnType("int");

                    b.Property<int>("ContributionYear")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ScheduleAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ScheduleFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCode");

                    b.ToTable("NewPaymentSchedules");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.RelationshipManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Othernames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOfPosting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RelationshipManagers");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Amount_Processed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IDNO")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Refund_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerCode");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Employee", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerCode");

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.EmployerAllocation", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerCode");

                    b.HasOne("EmployerPortal.API.Data.RelationshipManager", "RelationshipManager")
                        .WithMany()
                        .HasForeignKey("RelationshipManagerId");

                    b.Navigation("Employer");

                    b.Navigation("RelationshipManager");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.NewPaymentSchedule", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerCode");

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("EmployerPortal.API.Data.Schedule", b =>
                {
                    b.HasOne("EmployerPortal.API.Data.Employer", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerCode");

                    b.Navigation("Employer");
                });
#pragma warning restore 612, 618
        }
    }
}
